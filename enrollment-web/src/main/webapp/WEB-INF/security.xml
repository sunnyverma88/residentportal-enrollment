<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
           
<global-method-security pre-post-annotations="enabled"></global-method-security>
<http use-expressions="true" auto-config="true">
<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
<form-login login-page="/login" default-target-url="/account/1" authentication-failure-url="/login/failed" />
<logout logout-url="/logout" logout-success-url="/index"/>
</http>


<authentication-manager>

<authentication-provider>

<!-- <user-service >
<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
      <user name="bob" password="bobspassword" authorities="ROLE_USER" />
</user-service> -->

<password-encoder hash="bcrypt" />
 <jdbc-user-service data-source-ref="dataSource"
	authorities-by-username-query="select au.email,role.name from app_user au
  	join user_role on au.userid=user_role.user_id
  	join role on user_role.roles_roleid=role.roleid
  	where au.email=?"
	users-by-username-query="SELECT au.email,au.password,au.enabled FROM app_user au where lower(au.email)= lower(?)" 
	/>
</authentication-provider>
</authentication-manager>
	
</beans:beans>


